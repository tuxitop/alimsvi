<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>‌داده‌های خام (برنامه‌نویسی)</title><link>http://alimsvi.ir/</link><description></description><atom:link type="application/rss+xml" href="http://alimsvi.ir/blog/categories/brnmhnwysy.xml" rel="self"></atom:link><language>fa</language><lastBuildDate>Fri, 29 Jan 2016 16:53:18 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>با کدام زبان برنامه‌نویسی شروع کنیم؟</title><link>http://alimsvi.ir/blog/posts/how-to-start-programming.html</link><dc:creator>علی موسوی</dc:creator><description>&lt;div&gt;&lt;p&gt;اگر قصد دارید برنامه‌نویسی رو شروع کنید، به احتمال زیاد این سوال براتون پیش اومده که چه زبانی برای شروع مناسب‌تره؟ گاهی افراد تازه‌کار ماه‌ها وقت صرف این می‌کنن که یک زبان رو انتخاب کنن و برنامه‌نویسی رو شروع کنن. طبیعیه که سوالات زیادی برای کسی که می‌خواد الفبای برنامه‌نویسی رو یاد بگیره پیش بیاد. سوالاتی از قبیل این که کدام زبان «قدرت»‌ بیشتری داره؟ کدام زبان برای یادگیری «ساده‌تر» است؟ ویا کدام زبان «سرعت» بیشتری داره؟&lt;/p&gt;
&lt;p&gt;از طرفی معمولا برنامه‌نویس‌ها با تعصب خاصی نسبت به زبان برنامه‌نویسی انتخابی خودشون نظر می‌دن. ممکنه چندین دلیل برای اثبات این که فلان زبان بهترین زبان برای یادگیریه یا فلان زبان به درد یادگیری نمی‌خوره بیارن و حرف‌هایی بزنن که تازه‌کارها رو گیج‌تر بکنه و انتخاب رو براشون سخت‌تر.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://alimsvi.ir/images/programming-langs-comic.jpg"&gt;&lt;img alt="/images/programming-langs-comic.thumbnail.jpg" class="align-center" src="http://alimsvi.ir/images/programming-langs-comic.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;اولین زبان برای یادگیری: زبان انگلیسی&lt;/h2&gt;
&lt;p&gt;زبان‌های برنامه‌نویسی سریع تغییر می‌کنن و تکنولوژی‌های جدید به سرعت جایگزین تکنولوژی‌های قبلی می‌شن. سرعت این جابجایی به حدی زیاده که فرصت ترجمه‌ی مطالب پیش نمیاد. حتی اگر آموزش‌های مناسب به زبان فارسی داشته باشید، اگر جایی به مشکل برخورد بکنید، احتمال این که جواب سوالاتتون رو در انجمن‌های فارسی به دست بیارید خیلی پایینه. همین‌طور میزان پیشرفتتون توی برنامه‌نویسی همیشه تا یه سطح خاص باقی می‌مونه.&lt;/p&gt;
&lt;p&gt;بنابراین اگر سطح دانش شما از زبان انگلیسی در حدی نیست که بتونید در کلاس‌های آنلاین برنامه‌نویسی شرکت کنید یا کتاب‌های برنامه‌نویسی رو بخونید، به جای خوندن این مقاله، دنبال یک کلاس زبان خوب و مناسب با شرایط خودتون باشید و از اونجا شروع کنید. نگران زمان نباشید، سریع‌تر از اون چیزی که فکر می‌کنید در زبان پیشرفت خواهید کرد و فکر می‌کنم حتی اگر از سطوح پایین زبان هم شروع کنید، بعد از یک سال شرکت در کلاس‌های زبان کم کم می‌تونید مطالب رو متوجه بشید و شروع کنید به یادگیری.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;بهترین زبان برای شروع: ...&lt;/h2&gt;
&lt;p&gt;زبان‌های زیادی برای برنامه‌نویسی وجود داره و هر کدوم از اون‌ها یک سری ویژگی‌های خوب دارن و طبیعتا یک سری مشکلات. من بهتون قول می‌دم که با بررسی مزایا و معایب این زبان‌‌ها به جای خاصی نمی‌رسیم و نهایتا لیستمون رو بتونیم برسونیم به پنج، شش زبان. همچنین نتیجه‌ی مشورت با سایر برنامه‌نویس‌ها هم که سردرگمی بیشتر بود. بنابراین باید با یک دید دیگه به قضیه نگاه کنیم. برای این کار بیاید اول از خودمون بپرسیم که «اگر زبان برنامه‌نویسی اشتباه رو برای شروع انتخاب کنم چی می‌شه؟»&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://alimsvi.ir/images/html-comic.jpg"&gt;&lt;img alt="/images/html-comic.thumbnail.jpg" class="align-center" src="http://alimsvi.ir/images/html-comic.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;اگر زبان برنامه‌نویسی اشتباه رو برای شروع آغاز کنم چی؟&lt;/h2&gt;
&lt;p&gt;حقیقت اینه که در ابتدای کار، بیشتر از این که زبان برنامه‌نویسی رو یاد بگیرید، نگاه برنامه‌نویسی رو یاد می‌گیرید. یعنی یاد می‌گیرید که چطور مثل یک برنامه‌نویس به مسائل نگاه کنید و بتونید با استفاده از الگوریتم‌های برنامه‌نویسی مشکلات رو حل کنید. این مساله مهم‌ترین چیزیه که یک برنامه‌نویس تازه‌کار باید یاد بگیره و بیشتر پیچیدگی‌های اولیه برنامه‌نویسی هم مربوط به شکل گرفتن این روش نگاه به مسائل در ذهن می‌شه.&lt;/p&gt;
&lt;p&gt;هر یک از زبان‌های برنامه‌نویسی رو که انتخاب کنید، برای این منظور مناسب‌اند. ضمن این که برنامه‌نویسی که این طرز نگاه رو یاد گرفته می‌تونه سایر زبان‌های برنامه‌نویسی رو هم به سرعت یاد بگیره و ظرف چند ماه به یک زبان دیگه کوچ کنه.&lt;/p&gt;
&lt;p&gt;بنابراین از این نظر هیچ زبانِ برنامه‌نویسیِ اشتباهی برای شروع وجود نداره. و باید کلا این نگرانی رو از ذهنتون پاک کنید که ممکنه زبانی که انتخاب کردید اشتباه باشه.&lt;/p&gt;
&lt;p&gt;حالا که این نگرانی برطرف شد با توجه به معیارهای زیر یک زبان برنامه‌نویسی رو انتخاب کنید و به صورت جدی تصمیم بگیرید که ادامه‌اش بدید.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;۱- دوستانتون با چه زبان‌های برنامه‌نویسی‌ای برنامه می‌نویسند؟&lt;/strong&gt;
این مهم‌ترین سوالیه که باید بپرسید. اگر اطرافیانتون هم برنامه‌نویس هستند و می‌تونن در زمینه‌ی زبان خاصی راهنمایی‌تون کنند، پیشرفت سریع‌تری خواهید داشت.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;۲- برای کدام زبان منابع بیشتری برای آموزش در دسترس دارید؟&lt;/strong&gt;
این روزها بسیاری از دانشگاه‌های مطرح دنیا در سایت‌های آموزشی از جمله &lt;a class="reference external" href="https://www.coursera.org"&gt;کورسرا&lt;/a&gt; و &lt;a class="reference external" href="https://www.udacity.com"&gt;یوداسیتی‌&lt;/a&gt; کلاس‌های آموزشی خوبی در زمینه‌ی برنامه‌نویسی می‌ذارن، که بیشترشون رایگان هستن. یک مسیر رو انتخاب کنید و پیش برید.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>برنامه‌نویسی</category><guid>http://alimsvi.ir/blog/posts/how-to-start-programming.html</guid><pubDate>Fri, 29 Jan 2016 09:54:41 GMT</pubDate></item><item><title>بررسی نظریه احتمالات در پایتون</title><link>http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html</link><dc:creator>علی موسوی</dc:creator><description>&lt;div&gt;&lt;p&gt;بازی‌هایی که در اون‌ها از تاس استفاده می‌شه معمولا تا حد زیادی به شانس بستگی داره. افراد مختلف تعاریف مختلفی از شانس دارن، عده‌ای سعی می‌کنن که با تمرکز روی یک عدد یا دعا کردن شانس خودشون رو برای ریختن تاس مناسب افزایش بدن و عده‌ای هم به روش‌های مختلف دست به تقلب می‌زنن. اما ریاضیات تعریف متفاوتی از شانس داره. ریاضیات، شانس رو «اندازه‌ی احتمالِ وقوعِ یک رویداد» تعریف می‌کنه که با یک عدد بین ۰ و ۱ نمایش داده می‌شه و همون‌طور که می‌دونین در مبحث &lt;a class="reference external" href="http://fa.wikipedia.org/wiki/%D8%A7%D8%AD%D8%AA%D9%85%D8%A7%D9%84%D8%A7%D8%AA"&gt;احتمالات&lt;/a&gt; بررسیش می‌کنه.&lt;/p&gt;
&lt;p&gt;از اونجا که ایده‌ی تاس اینه که ما به یک روشی یک عدد تصادفی بین ۱ تا ۶ انتخاب کنیم، من این کار رو به راحتی با استفاده از ماژول random در پایتون شبیه‌سازی می‌کنم تا بتونم بعدا بررسیش کنم:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://alimsvi.ir/listings/die_probability.py.html"&gt;die_probability.py&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-1"&gt; 1&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-2"&gt; 2&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-3"&gt; 3&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-4"&gt; 4&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-5"&gt; 5&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-6"&gt; 6&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-7"&gt; 7&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-8"&gt; 8&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-9"&gt; 9&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-10"&gt;10&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-11"&gt;11&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_07fc29af8018400eaa9d0ada6d1fe501-12"&gt;12&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;roll_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_sides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true_random&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;'''simulates rolling a die, if true_random is set, it will use random.org&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-6"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    to produce true random numbers. be careful though, it might take a lot&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-7"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    of time and the difference is really not that much.'''&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;true_random&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-9"&gt;&lt;/a&gt;        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;randomdotorg&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randomdotorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RandomDotOrg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'alimsvi.ir'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-11"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_sides&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_07fc29af8018400eaa9d0ada6d1fe501-12"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_sides&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;بر اساس چیزی که ریاضیات می‌گه، فرض کنید ما یک تاس عادلانه‌ی ۶ وجهی داشته باشیم که روی هر وجه اون یکی از اعداد بازه‌‌ی از ۱ تا ۶ نوشته شده باشه. هر عددی رو که در این بازه در نظر بگیریم و تاس رو بریزیم، احتمال این که عدد مورد نظر ما بیاد
&lt;span class="math"&gt;\(\frac{1}{6}\)&lt;/span&gt; است.&lt;/p&gt;
&lt;p&gt;یک روش امتحان کردن این مساله می‌تونه به این صورت باشه که ما بارها تاس مورد نظرمون رو بریزیم و انتظار داشته باشیم که میانگین دفعاتی که تاس مورد نظرمون ریخته شده نزدیک به &lt;span class="math"&gt;\(\frac{1}{6}\)&lt;/span&gt; باشه. و این یعنی اگر میانگین رو M در نظر بگیریم، اختلاف M با عدد &lt;span class="math"&gt;\(\frac{1}{6}\)&lt;/span&gt; باید نزدیک به صفر باشه.&lt;/p&gt;
&lt;p&gt;از اونجایی که من حوصله ندارم یک تاس رو «بارها» بریزم و نتیجه‌ها رو یادداشت کنم و در آخر میانگین مورد نظرم رو بررسی کنم، چند خط کد پایتون می‌نویسم و این مساله رو با یک نمودار بررسی می‌کنم:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://alimsvi.ir/listings/die_probability.py.html"&gt;die_probability.py&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-1"&gt; 1&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-2"&gt; 2&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-3"&gt; 3&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-4"&gt; 4&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-5"&gt; 5&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-6"&gt; 6&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-7"&gt; 7&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-8"&gt; 8&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-9"&gt; 9&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-10"&gt;10&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-11"&gt;11&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-12"&gt;12&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-13"&gt;13&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-14"&gt;14&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-15"&gt;15&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-16"&gt;16&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-17"&gt;17&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-18"&gt;18&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-19"&gt;19&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-20"&gt;20&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-21"&gt;21&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-22"&gt;22&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-23"&gt;23&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-24"&gt;24&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-25"&gt;25&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_d698250984144dc2b3de78a0a5b4e67d-26"&gt;26&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_fairness_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_sides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_trials&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;'''tests the difference between expected average and the real average&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-3"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    produced after rolling a die for a range of trials.'''&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;diff_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;num_trials_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num_trials&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_trials&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;side_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-8"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dummy_idx&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_trials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-9"&gt;&lt;/a&gt;            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roll_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_sides&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-10"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-11"&gt;&lt;/a&gt;                &lt;span class="n"&gt;side_count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;statistical_prb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;computed_prb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;side_count&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_trials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;diff_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;computed_prb&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;statistical_prb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;num_trials_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_trials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_trials_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;diff_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number of trials ran on dice."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Difference between expected and computed results"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylim&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Fairness of a Die in Python"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-24"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_d698250984144dc2b3de78a0a5b4e67d-26"&gt;&lt;/a&gt;&lt;span class="n"&gt;plot_fairness_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;نموداری که با اجرای این کد نمایش داده می‌شه مشخص می‌کنه که هر چه تاس بیشتری ریخته شده اختلاف میانگین با &lt;span class="math"&gt;\(\frac{1}{6}\)&lt;/span&gt; بیشتر به صفر نزدیک شده:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://alimsvi.ir/images/die_probability_1.jpeg"&gt;&lt;img alt="/images/die_probability_1.thumbnail.jpeg" class="align-center" src="http://alimsvi.ir/images/die_probability_1.thumbnail.jpeg"&gt;&lt;/a&gt;
&lt;p&gt;برای این که مفهوم‌تر بشه، قضیه رو یک جور دیگه امتحان می‌کنیم. فرض کنید تاس رو ۳۰۰۰ بار بریزیم، با توجه به این که
&lt;span class="math"&gt;\(\frac{1}{6}*3000=500\)&lt;/span&gt;
، می‌تونیم انتظار داشته باشیم که هر یک از اعداد روی تاس حدوداً ۵۰۰ بار ریخته بشن. بنابراین می‌تونیم چند خط کد دیگه بنویسم که ۳۰۰۰ بار تابع ما رو اجرا کنه، اعدادی رو که ریخته می‌شن بشمره و در نهایت نتیجه رو در یک نمودار دیگه بررسی کنیم:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://alimsvi.ir/listings/die_probability.py.html"&gt;die_probability.py&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-1"&gt; 1&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-2"&gt; 2&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-3"&gt; 3&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-4"&gt; 4&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-5"&gt; 5&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-6"&gt; 6&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-7"&gt; 7&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-8"&gt; 8&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-9"&gt; 9&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-10"&gt;10&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-11"&gt;11&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-12"&gt;12&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-13"&gt;13&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-14"&gt;14&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-15"&gt;15&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-16"&gt;16&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-17"&gt;17&lt;/a&gt;
&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_f4e12986f51243b89d6166ca4d769cec-18"&gt;18&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_fairness_bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_sides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_trials&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true_random&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;'''rolls the die for "num_trials" times and calculates the number of&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-3"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    times each side of the die was shown, it then shows a bar plot'''&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_sides&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dummy_idx&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_trials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;roll_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_sides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true_random&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;x_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;y_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'center'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Fairness of a Die in Python"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"side of the die"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number of times the number produced"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_f4e12986f51243b89d6166ca4d769cec-18"&gt;&lt;/a&gt;&lt;span class="n"&gt;plot_fairness_bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;نمودار به دست اومده این مساله رو تایید می‌کنه:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://alimsvi.ir/images/die_probability_2.jpeg"&gt;&lt;img alt="/images/die_probability_2.thumbnail.jpeg" class="align-center" src="http://alimsvi.ir/images/die_probability_2.thumbnail.jpeg"&gt;&lt;/a&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;نتیجه‌&lt;/h2&gt;
&lt;p&gt;این نتایج نشون می‌ده که در مقیاس بزرگ‌تر و زمانی که تعداد دفعات انجام یک فرایند تصادفی زیاد بشه، نتیجه‌ی به دست اومده خیلی شانسی نیست. یعنی هر چه تعداد دفعات ریختن تاس ما به بی‌نهایت میل کنه، نتیجه‌ی به دست آمده مشخص‌تر می‌شه. این مساله رو به خیلی چیزها می‌شه بسط داد و استفاده‌های زیادی در علوم مختلف داره، که تفسیرش با شما و علم مورد نظرتون.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;ویرایش&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://ataeyan.com/"&gt;مهدی&lt;/a&gt; توی فیس‌بوک برای من نوشته:&lt;/p&gt;
&lt;blockquote&gt;
یک نکته توی کامپیوتر چیزی به نام تولید اعداد صد درصد تصادفی نداریم. یعنی تو اگه یک سیستم بسته داشته باشی (مثل همین کامپیوترت) اعدادی که تصادفی تولید میشه در حقیقت تصادفی نیستند! و اگه آزمایشت رو بی‌نهایت تکرار کنی میتونی این تصادفی نبودن رو کشف کنی.
راه‌حلش هم استفاده از سرویس‌هایی مثل &lt;a class="reference external" href="http://random.org"&gt;random.org&lt;/a&gt; اه که اونها هم روشهای خاص خودشون رو دارن برای تولید اعداد رندوم (مثلا از امواج کیهانی استفاده می‌کنن)&lt;/blockquote&gt;
&lt;p&gt;برای امتحان حرف مهدی، من کد توابع رو توی پست عوض کردم و همین‌طور که می‌بینید به تابع roll_die یک آرگومان جدید اضافه کردم که در صورت استفاده ازش، با استفاده از ماژول &lt;a class="reference external" href="https://pypi.python.org/pypi/randomdotorg/"&gt;randomdotorg&lt;/a&gt; از طریق وبسایت مذکور اعداد تصادفی واقعی به دست بیاد و این رو در تابع plot_fairness_bar اعمال کردم و با خط زیر امتحانش کردم:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://alimsvi.ir/listings/die_probability.py.html"&gt;die_probability.py&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html#rest_code_434378b796d34b32aadd7add12dd2bf7-1"&gt;1&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_434378b796d34b32aadd7add12dd2bf7-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;plot_fairness_bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true_random&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;طبیعتا مدت زیادی طول کشید تا ۳۰۰۰ عدد تصادفی از طریق وبسایت random.org تولید بشه و با سرعت و کیفیت بالای اینترنت اینجا، به دست من برسه. ولی نتیجه‌ی نهایی نمودار زیر شد:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://alimsvi.ir/images/die_probability_3.jpeg"&gt;&lt;img alt="/images/die_probability_3.thumbnail.jpeg" class="align-center" src="http://alimsvi.ir/images/die_probability_3.thumbnail.jpeg"&gt;&lt;/a&gt;
&lt;p&gt;همون‌طور که می‌بینید تفاوت آن‌چنانی با الگوریتم ماژول random پایتون وجود نداره و من فکر می‌کنم در مواردی که ما لازم داریم می‌شه با خیال راحت از روش سریع‌تر پایتون استفاده کرد.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>mathjax</category><category>برنامه‌نویسی</category><category>ریاضیات</category><category>پایتون</category><guid>http://alimsvi.ir/blog/posts/ehtemal-dar-python-1.html</guid><pubDate>Fri, 12 Jun 2015 14:21:51 GMT</pubDate></item></channel></rss>